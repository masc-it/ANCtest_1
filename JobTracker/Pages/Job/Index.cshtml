@page
@model JobTracker.Pages.Job.IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}


<div class="container row p-0 m-0">
    <div class="col-9">
        <h2 class="text-info">Jobs list</h2>
    </div>
    <div class="col-3">
        <a asp-page="Create" class="btn btn-info form-control text-white">Add new job</a>
    </div>

    <form method="post" data-ajax="true" data-ajax-url="/Job/Index?handler=Partial" data-ajax-method="post" data-ajax-update="#panel">
        <button type="submit">Click here</button>
    </form>

    <form method="post" data-ajax="true" data-ajax-complete="completed" data-ajax-url="/Job/Index?handler=Request1" data-ajax-method="post">
        <button type="submit">Click here</button>
    </form>

    <script>
        completed = function (res) {
            $("#panel").html(res.responseText)
        };

        $(document).ready(function () {

            var t = $('input[name="__RequestVerificationToken"]').val();
            console.log(t);
            $.ajax({
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        t);
                },
                url: "/Job/Index?handler=Request1",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
            
                success: function (r) {
                    
                    console.log(r[0].description);

                }
            });
        });
    </script>

    <div id="panel" class="col-12"></div>
    <div class="col-12 border p-3 mt-3">
        <form method="post">
            @if (Model.Jobs.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            <label asp-for="Jobs.FirstOrDefault().Description"></label>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(m=>m.Books.FirstOrDefault().Author)*@
                            <label asp-for="Jobs.FirstOrDefault().Earnings"></label>
                        </th>

                    </tr>

                    @foreach (var item in Model.Jobs)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Earnings)
                            </td>

                            <td>
                                <button asp-page-handler="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</button>
                                <a asp-page="Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm text-white">Edit</a>
                            </td>
                        </tr>
                    }
                </table>

            }
            else
            {
                <p>No jobs :(</p>
            }

        </form>
    </div>
</div>